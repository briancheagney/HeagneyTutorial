// room script file

function room_AfterFadeIn()
{
  oChord2.SetView(7, 5);
  oChord2.Animate(0, 5, eRepeat, eNoBlock);
}

function room_RepExec()
{
 // this asks if a certain object is on a specific frame of it's animation (view).
 if (oChord2.Animating && oChord2.Frame == 1)
 {
   //declaring variables to be used in this little bit of code
   int dist;
   float vol;
   dist = cMonty.x - (oChord2.X+50);
   
   //AGS doesn't have an Absolute Value function (bad!) so I have to multiply by -1 if I want to turn a negative distance into a positive.
   if (dist<0)
   {
     dist=dist*-1;
   }
   
   // I only want to play the noise if I am close to the chord (less than 350 pixels away).
   if (dist < 350)
   {
     
    //I name the audio channel here so that I can refer to it later on in the code.
    AudioChannel *zap = aElectriczap2.Play();
    
    // This equation helps me INVERT the distance so that the closer I am (0 pixels) the louder the volume is (100 = full volume)!
    vol = 100.0*(1.0 - (IntToFloat(dist)/350.0));
    
    // This little bit of code just ENSURES that volume will never increase higher than 100%
    if (vol>100.0)
    {
      vol=100.0;
    }
    
    //This line sets the volume to the value determined in the equation above.
    zap.Volume = FloatToInt(vol, eRoundUp);
    
    //This is my way of debugging. I have Monty saying the values that I was working towards. It was a LONG 2 hours to figure this out.
    //cMonty.SayBackground ("%f", vol);
    cMonty.SayBackground ("%d", dist);
   }
 }
 if (isDragging && draggedObject != null)
 {
  // Move the object to the current mouse position
  draggedObject.SetPosition(mouse.x+Game.Camera.X, mouse.y+Game.Camera.Y);
 }
}
function on_mouse_click(MouseButton button) {
    if (button == eMouseLeft && mouse.Mode == eModeDrag) {
        // Check if player clicked on an object
        Object* obj = Object.GetAtScreenXY(mouse.x, mouse.y);
        //This next "if" will STOP dragging if you're currently dragging something.
        if (isDragging) {
          // Stop dragging
          isDragging = false;
          draggedObject = null;
        }
        //This next "if" will START dragging something if you're NOT currently dragging anything.
        if (obj != null) {
            // Start dragging the object
            isDragging = true;
            draggedObject = obj;
        }
    }
}
function oObject0_AnyClick(Object *theObject, CursorMode mode)
{
player.ChangeRoom(3);
}
